.686p
		 .xmm
		 .MODEL FLAT, STDCALL 
		 includelib kernel32.lib
		 includelib masm32.lib
	     ExitProcess PROTO:DWORD
		 .STACK 4096
.DATA
real_buff REAL8 0.0
Literal_0__none BYTE "ереекр", 0
Literal_New_0__none REAL8 -0.200000
Literal_2__none REAL8 0.000000
Literal_3__none REAL8 -0.500000
Literal_4__none BYTE "ret равен -0.5", 0
Literal_5__none REAL8 -1.000000
Literal_6__none BYTE "ret равен -1.0", 0
Literal_7__none BYTE "ret не равен ни -0.5, ни -1.0,но оно отрицательное", 0
Literal_8__none REAL8 0.000000
Literal_9__none BYTE "ret равен 0", 0
Literal_10__none REAL8 0.000000
Literal_11__none REAL8 0.500000
Literal_12__none BYTE "ret равен 0.5", 0
Literal_13__none REAL8 1.000000
Literal_14__none BYTE "ret равен 1", 0
Literal_15__none BYTE "ret не равен ни 0.5 ни 1", 0
Literal_New_1__none SDWORD 0
.CODE
option prologue:PrologueDef
option epilogue:EpilogueDef
main__g0 proc
local result__g0_m11[256]:BYTE, ret__g0_m11:REAL8
lea eax, Literal_0__none
push eax
pop esi
lea edi, result__g0_m11
 copy_loop_0:
lodsb
stosb
test al, al
jnz copy_loop_0
fld Literal_New_0__none
fstp ret__g0_m11
fld ret__g0_m11
fld Literal_2__none
fstp real_buff
movsd xmm1, real_buff
fstp real_buff
movsd xmm0, real_buff
cmpsd xmm0, xmm1, 1
movd eax, xmm0
and eax, eax
jnz If_l0
jmp Else0
If_l0:
fld ret__g0_m11
fld Literal_3__none
fstp real_buff
movsd xmm1, real_buff
fstp real_buff
movsd xmm0, real_buff
cmpsd xmm0, xmm1, 0
movd eax, xmm0
and eax, eax
jnz If_l1
jmp Else1
If_l1:
lea eax, Literal_4__none
push eax
pop esi
lea edi, result__g0_m11
 copy_loop_1:
lodsb
stosb
test al, al
jnz copy_loop_1
jmp Endif1
Else1:
fld ret__g0_m11
fld Literal_5__none
fstp real_buff
movsd xmm1, real_buff
fstp real_buff
movsd xmm0, real_buff
cmpsd xmm0, xmm1, 0
movd eax, xmm0
and eax, eax
jnz If_l2
jmp Else2
If_l2:
lea eax, Literal_6__none
push eax
pop esi
lea edi, result__g0_m11
 copy_loop_2:
lodsb
stosb
test al, al
jnz copy_loop_2
jmp Endif2
Else2:
lea eax, Literal_7__none
push eax
pop esi
lea edi, result__g0_m11
 copy_loop_3:
lodsb
stosb
test al, al
jnz copy_loop_3
Endif2:
Endif1:
jmp Endif0
Else0:
fld ret__g0_m11
fld Literal_8__none
fstp real_buff
movsd xmm1, real_buff
fstp real_buff
movsd xmm0, real_buff
cmpsd xmm0, xmm1, 0
movd eax, xmm0
and eax, eax
jnz If_l3
jmp Else3
If_l3:
lea eax, Literal_9__none
push eax
pop esi
lea edi, result__g0_m11
 copy_loop_4:
lodsb
stosb
test al, al
jnz copy_loop_4
jmp Endif3
Else3:
fld ret__g0_m11
fld Literal_10__none
fstp real_buff
movsd xmm1, real_buff
fstp real_buff
movsd xmm0, real_buff
cmpsd xmm0, xmm1, 6
movd eax, xmm0
and eax, eax
jnz If_l4
jmp Else4
If_l4:
fld ret__g0_m11
fld Literal_11__none
fstp real_buff
movsd xmm1, real_buff
fstp real_buff
movsd xmm0, real_buff
cmpsd xmm0, xmm1, 0
movd eax, xmm0
and eax, eax
jnz If_l5
jmp Else5
If_l5:
lea eax, Literal_12__none
push eax
pop esi
lea edi, result__g0_m11
 copy_loop_5:
lodsb
stosb
test al, al
jnz copy_loop_5
jmp Endif5
Else5:
fld ret__g0_m11
fld Literal_13__none
fstp real_buff
movsd xmm1, real_buff
fstp real_buff
movsd xmm0, real_buff
cmpsd xmm0, xmm1, 0
movd eax, xmm0
and eax, eax
jnz If_l6
jmp Else6
If_l6:
lea eax, Literal_14__none
push eax
pop esi
lea edi, result__g0_m11
 copy_loop_6:
lodsb
stosb
test al, al
jnz copy_loop_6
jmp Endif6
Else6:
lea eax, Literal_15__none
push eax
pop esi
lea edi, result__g0_m11
 copy_loop_7:
lodsb
stosb
test al, al
jnz copy_loop_7
Endif6:
Endif5:
jmp Endif4
Else4:
Endif4:
Endif3:
Endif0:

INVOKE ExitProcess, 0
main__g0 endp
end main__g0