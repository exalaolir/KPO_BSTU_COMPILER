.686p
.xmm
.MODEL FLAT, STDCALL
includelib kernel32.lib
includelib msvcrt.lib
includelib ucrt.lib
includelib vcruntime.lib
includelib msvcprt.lib
includelib standartLib.lib
Print PROTO arg:ptr byte
Println PROTO arg:ptr byte
IToString PROTO arg:sdword
FToString PROTO arg:real8
BoolToString PROTO arg:sdword
Concat PROTO arg1:ptr byte, arg2:ptr byte
Absb PROTO arg:sword
ExitProcess PROTO:DWORD
.STACK 4096
.DATA
real_buff REAL8 0.0
Literal_New_0__none SDWORD 0
Literal_New_1__none REAL8 9.900000
Literal_2__none SDWORD 10
Literal_3__none SDWORD 3
Literal_4__none REAL8 1.200000
Literal_5__none BYTE "if z >= 3 итерация ", 0
Literal_6__none REAL8 2.300000
Literal_7__none SDWORD 1
Literal_8__none BYTE "Я люблю ", 0
Literal_9__none BYTE "Катю", 0
Literal_10__none BYTE " очень, очень", 0
Literal_New_2__none SDWORD 0
Literal_12__none SDWORD 67
Literal_New_3__none SDWORD 0
.CODE
option prologue:PrologueDef
option epilogue:EpilogueDef
main__g0 proc
local yy__g0_m11_w22_i33:SDWORD, z__g0_m11:SDWORD, q__g0_m11:REAL8, tyuio__g0_m11:SDWORD, yy__g0_m11_w22_e43:SDWORD, aaa__g0_m11[256]:BYTE, b__g0_m11[256]:BYTE, asdf__g0_m11[256]:BYTE, wer__g0_m11[256]:BYTE, uuu__g0_m11:SDWORD
push Literal_New_0__none
pop z__g0_m11
fld Literal_New_1__none
fstp q__g0_m11
While_start0:
push z__g0_m11
push Literal_2__none
pop eax
pop ebx
cmp eax, ebx
jne While_l0
jmp Else_While0
While_l0:
push z__g0_m11
push Literal_3__none
pop ebx
pop eax
cmp eax, ebx
jge If_l0
jmp Else0
If_l0:
fld q__g0_m11
fld Literal_4__none
fsub
fstp q__g0_m11
lea eax, Literal_5__none
push eax
call Print
push eax
pop yy__g0_m11_w22_i33
push z__g0_m11
call IToString
push eax
call Println
push eax
pop yy__g0_m11_w22_i33
jmp Endif0
Else0:
fld q__g0_m11
fld Literal_6__none
fadd
fstp q__g0_m11
fld q__g0_m11
fstp real_buff
lea eax, real_buff
push sdword ptr [eax+4]
push sdword ptr [eax]
call FToString
push eax
call Println
push eax
pop yy__g0_m11_w22_e43
Endif0:
push z__g0_m11
push Literal_7__none
pop EBX
pop EAX
add EAX, EBX
push EAX
pop z__g0_m11
jmp While_start0
Else_While0:
lea eax, Literal_8__none
push eax
pop esi
lea edi, aaa__g0_m11
 copy_loop_0:
lodsb
stosb
test al, al
jnz copy_loop_0
lea eax, Literal_9__none
push eax
pop esi
lea edi, b__g0_m11
 copy_loop_1:
lodsb
stosb
test al, al
jnz copy_loop_1
lea eax, Literal_10__none
push eax
pop esi
lea edi, asdf__g0_m11
 copy_loop_2:
lodsb
stosb
test al, al
jnz copy_loop_2
lea eax, b__g0_m11
push eax
lea eax, asdf__g0_m11
push eax
call Concat
push eax
pop esi
lea edi, wer__g0_m11
 copy_loop_3:
lodsb
stosb
test al, al
jnz copy_loop_3
lea eax, aaa__g0_m11
push eax
lea eax, wer__g0_m11
push eax
call Concat
push eax
call Println
push eax
pop uuu__g0_m11
push Literal_New_2__none
pop tyuio__g0_m11
push Literal_12__none
push tyuio__g0_m11
xor EDX,EDX
pop EBX
pop EAX
div EBX
push EAX
pop tyuio__g0_m11
push Literal_New_3__none

pop eax
ret

INVOKE ExitProcess, 0
main__g0 endp
end main__g0