let PI = 3.14;

fn double countEllipseLength(double rad)
{
  return 2.0*PI*rad*rad;
}
fn int shiftR(int firstOp, int secondOp)
{
  return firstOp >> secondOp;
}
fn int shiftL(int firstOp, int secondOp)
{
  return firstOp << secondOp;
}
fn bool characterChar(char firstOp, char secondOp)
{
    if(firstOp : secondOp) 
    {
        return true;
    }
    else 
    {
        return false;
    }
    return true;
}
fn bool characterString(string firstOp, string secondOp)
{
    if(firstOp : secondOp) 
    {
        return true;
    }
    else 
    {
        return false;
    }
    return true;
}
fn uint sum (uint firstOp, uint secondOp)
{
    return firstOp + secondOp;
}
fn uint arithmetic(uint firstOp, uint secondOp)
{
    uint del = 0u3;
    uint result = (firstOp + secondOp * sum(0u50,0u30) - firstOp) % del;
    return result;
}
fn int sumInt(int firstOp, int secondOp)
{
    return firstOp+ secondOp;
}
fn int arithmeticsInt(int firstOp, int secondOp) 
{
    return ((firstOp+secondOp)*sumInt(34,56)-secondOp)%2;
}
fn int main()
{
let a = "";
a = "kkk";
let x = Println(a);
  #Контрольный пример#
   double result = countEllipseLength(2.45);

   let  functionStatus = Println("Результат длины окружности");
   functionStatus = Println(FToString(result));
   functionStatus = Println("/\n/Арифметический расчёт c uint");
   functionStatus = Println(UIToString(arithmetic(0u4,0u5)));
   functionStatus = Println("/\n/Арифметический расчёт c int");
   functionStatus = Println(IToString(arithmeticsInt(23,45)));

   functionStatus = Println("/\n/Битовый сдвиг");
   functionStatus = Println("20>>2");
   functionStatus = Println(IToString(shiftR(20,2)));
   functionStatus = Println("20<<2");
   functionStatus = Println(IToString(shiftL(20,2)));

  let counter = 0;
   functionStatus = Println("/\n/Счётчик");

  while(counter <= 10) 
  {
    functionStatus = Println(IToString(counter));
    counter = counter + 1;
  }
   functionStatus = Println("/\n/Сравнение символов");
   functionStatus = Println("a и b");
   functionStatus = Println(BoolToString(characterChar('a', 'b')));
   functionStatus = Println("a и a");
   functionStatus = Println(BoolToString(characterChar('a', 'a')));

   functionStatus= Println("/\n/Соединение строк");
   let str = Concat("Hello,"," World");
    functionStatus = Println(str);

   functionStatus= Println("Соединение символов путём конвертарции в строку/\n/");
   let op = Concat(CharToString('a'),CharToString('b'));
   functionStatus= Println(op);
   return 0;
}